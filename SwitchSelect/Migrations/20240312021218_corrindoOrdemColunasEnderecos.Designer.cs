// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwitchSelect.Data;

#nullable disable

namespace SwitchSelect.Migrations
{
    [DbContext(typeof(SwitchSelectContext))]
    [Migration("20240312021218_corrindoOrdemColunasEnderecos")]
    partial class corrindoOrdemColunasEnderecos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SwitchSelect.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SwitchSelect.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SwitchSelect.Models.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<bool?>("EmEstoque")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsJogoPreferido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("SwitchSelect.Models.Cliente", b =>
                {
                    b.OwnsOne("SwitchSelect.Models.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("varchar(8)");

                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("varchar(200)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)");

                            b1.HasKey("Id");

                            b1.HasIndex("ClienteId")
                                .IsUnique();

                            b1.ToTable("Enderecos", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");

                            b1.OwnsOne("SwitchSelect.Models.Bairro", "Bairro", b2 =>
                                {
                                    b2.Property<int>("EnderecoId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Descricao")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("varchar(100)")
                                        .HasColumnName("Bairro");

                                    b2.HasKey("EnderecoId");

                                    b2.ToTable("Enderecos");

                                    b2.WithOwner()
                                        .HasForeignKey("EnderecoId");

                                    b2.OwnsOne("SwitchSelect.Models.Cidade", "Cidade", b3 =>
                                        {
                                            b3.Property<int>("BairroEnderecoId")
                                                .HasColumnType("int");

                                            b3.Property<string>("Descricao")
                                                .IsRequired()
                                                .HasMaxLength(100)
                                                .HasColumnType("varchar(100)")
                                                .HasColumnName("Cidade");

                                            b3.HasKey("BairroEnderecoId");

                                            b3.ToTable("Enderecos");

                                            b3.WithOwner()
                                                .HasForeignKey("BairroEnderecoId");

                                            b3.OwnsOne("SwitchSelect.Models.Estado", "Estado", b4 =>
                                                {
                                                    b4.Property<int>("CidadeBairroEnderecoId")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Descricao")
                                                        .IsRequired()
                                                        .HasMaxLength(100)
                                                        .HasColumnType("varchar(100)")
                                                        .HasColumnName("Estado");

                                                    b4.HasKey("CidadeBairroEnderecoId");

                                                    b4.ToTable("Enderecos");

                                                    b4.WithOwner()
                                                        .HasForeignKey("CidadeBairroEnderecoId");
                                                });

                                            b3.Navigation("Estado")
                                                .IsRequired();
                                        });

                                    b2.Navigation("Cidade")
                                        .IsRequired();
                                });

                            b1.Navigation("Bairro")
                                .IsRequired();
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("SwitchSelect.Models.Jogo", b =>
                {
                    b.HasOne("SwitchSelect.Models.Categoria", "Categoria")
                        .WithMany("Jogos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("SwitchSelect.Models.Categoria", b =>
                {
                    b.Navigation("Jogos");
                });
#pragma warning restore 612, 618
        }
    }
}
